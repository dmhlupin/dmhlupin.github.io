const script = require('../script');
const pow = script.pow;
const sum = script.sum;
const sub = script.sub;
const mult = script.mult;
const div = script.div;

describe('Функция pow()', () => {
    it('должна возвращать 9 при аргументах (3, 2)', () => {
        expect(pow(3, 2)).toBe(9);
    });
    it('должна возвращать null при аргументах (null, 2)', () => {
        expect(pow(null, 2)).toBeNull();
    })
});


describe('Функция sum()', () => {
    it('должна возвращать 12 при аргументах (7, 5)', () => {
        expect(sum(7, 5)).toBe(12);
    });
    it('должна возвращать сообщение "Один из аргументов не число!" при аргументах ("str", 4)', () => {
        expect(sum('str', 4)).toBe('Один из аргументов не число!');
    });
    it('должна возвращать null при аргументах (null, 2)', () => {
        expect(sum(null, 2)).toBe('нет значений');
    });
    it('должна возвращать undefined при аргументах (undefined, 2)', () => {
        expect(sum(undefined, 2)).toBe('нет значений');
    })
}
)

describe('Функция sub()', () => {
    it('должна возвращать 12 при аргументах (20, 8)', () => {
        expect(sub(20, 8)).toBe(12);
    });
    it('должна возвращать сообщение "Один из аргументов не число!" при аргументах ("str", 5)', () => {
        expect(sub('str', 5)).toBe('Один из аргументов не число!');
    });
    it('должна возвращать null при аргументах (null, 2)', () => {
        expect(sub(null, 2)).toBe('нет значений');
    });
    it('должна возвращать undefined при аргументах (undefined, 2)', () => {
        expect(sub(undefined, 2)).toBe('нет значений');
    })
}
)

describe('Функция mult()', () => {
    it('должна возвращать 20 при аргументах (4, 5)', () => {
        expect(mult(4, 5)).toBe(20);
    });
    it('должна возвращать сообщение "Один из аргументов не число!" при аргументах ("str", 5)', () => {
        expect(mult('str', 5)).toBe('Один из аргументов не число!');
    });
    it('должна возвращать null при аргументах (null, 2)', () => {
        expect(mult(null, 2)).toBe('нет значений');
    });
    it('должна возвращать undefined при аргументах (undefined, 2)', () => {
        expect(mult(undefined, 2)).toBe('нет значений');
    })
}
)

describe('Функция div()', () => {
    it('должна возвращать 4 при аргументах (100, 25)', () => {
        expect(div(100, 25)).toBe(4);
    });
    it('должна возвращать сообщение "Один из аргументов не число!" при аргументах ("str", 5)', () => {
        expect(div('str', 5)).toBe('Один из аргументов не число!');
    });
    it('должна возвращать сообщение "на ноль делить нельзя!" при аргументе b = 0)', () => {
        expect(div(20, 0)).toBe('на ноль делить нельзя!');
    });
    it('должна возвращать null при аргументах (null, 2)', () => {
        expect(div(null, 2)).toBe('нет значений');
    });
    it('должна возвращать undefined при аргументах (undefined, 2)', () => {
        expect(div(undefined, 2)).toBe('нет значений');
    });
    
}
)